                    Two pointers approach
Two-pointers is an extremely common technique used to solve array and string problems. It involves having two integer variables that both move along an iterable. 
Here, we are focusing on arrays and strings. This means we will have two integers, usually named something like i and j, or left and right
which each represent an index of the array or string.

Idea #1:
Start the pointers at the edges of the input. Move them towards each other until they meet.

Pseudo code for Idea #1:
function fn(arr):
    left = 0                  # first index
    right = arr.length - 1    # last index

    while left < right:
        Do some logic here depending on the problem
        Do some more logic here to decide on one of the following:
            1. left++
            2. right--
            3. Both left++ and right--

The strength of this technique is that we will never have more than O(n) iterations for the while loop because the pointers start 
n away from each other and move at least one step closer in every iteration.
Therefore, if we can keep the work inside each iteration at O(1), this technique will result in a linear runtime, which is usually the best possible runtime.

